{"version":3,"file":"static/js/472.6ba6dc48.chunk.js","mappings":"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","sources":["module/post/PostAddNew.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Field from \"../../components/field/Field\";\r\nimport Label from \"../../components/label/Label\";\r\nimport Input from \"../../components/input/Input\";\r\nimport Dropdown from \"../../components/dropdown/Dropdown\";\r\nimport Button from \"../../components/button/Button\";\r\nimport Radio from \"../../components/checkbox/Radio\";\r\nimport Options from \"../../components/dropdown/Options\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport slugify from \"slugify\";\r\nimport { postStatus, userRole } from \"../../utils/constants\";\r\nimport ImageUpload from \"../../components/image/ImageUpload\";\r\nimport useFireBaseImage from \"../../hooks/useFireBaseImage\";\r\nimport Toggle from \"../../components/toggle/Toggle\";\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  onSnapshot,\r\n  query,\r\n  serverTimestamp,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"../../firebase-app/firebase-config\";\r\nimport Select from \"../../components/dropdown/Select\";\r\nimport List from \"../../components/dropdown/List\";\r\nimport { useAuth } from \"../../contexts/auth-context\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ReactQuill from \"react-quill\";\r\nimport { useMemo } from \"react\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\n// import useFirebaseImage from \"../../hooks/useFireBaseImage\";\r\n\r\n// const storage = getStorage(); //lỗi thì để vào trong component\r\n\r\nconst PostAddNewStyles = styled.div``;\r\nconst PostAddNew = () => {\r\n  const { userInfo } = useAuth();\r\n  const [content, setContent] = useState(\"\");\r\n  const {\r\n    control,\r\n    watch,\r\n    setValue,\r\n    handleSubmit,\r\n    getValues,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      title: \"\",\r\n      slug: \"\",\r\n      status: 2,\r\n      category: {},\r\n      hot: false,\r\n      user: {},\r\n      content: \"\",\r\n    },\r\n  });\r\n\r\n  const {\r\n    handleSelectImage,\r\n    setImage,\r\n    setProgress,\r\n    handleDeleteImage,\r\n    progress,\r\n    image,\r\n    imageName,\r\n  } = useFireBaseImage(setValue, getValues); //sử dụng custom hook\r\n\r\n  const watchStatus = watch(\"status\");\r\n  const watchHot = watch(\"hot\");\r\n  const watchCategory = watch(\"category\");\r\n  const navigate = useNavigate();\r\n\r\n  // console.log(\"PostAddNew ~ watchCategory\", watchCategory);\r\n\r\n  //set object user vào field: users để tối ưu hóa được bên component khác\r\n  useEffect(() => {\r\n    async function fetchUserData() {\r\n      if (!userInfo.email) return;\r\n      const q = query(\r\n        collection(db, \"users\"),\r\n        where(\"email\", \"==\", userInfo.email)\r\n      );\r\n      const querySnapShot = await getDocs(q);\r\n\r\n      querySnapShot.forEach((doc) => {\r\n        setValue(\"user\", {\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n    }\r\n    fetchUserData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [userInfo.email]);\r\n\r\n  const addPostHandler = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n      const cloneValues = { ...values };\r\n      cloneValues.slug = slugify(values.slug || values.title, { lower: true }); // người dùng nhập tiếng việt nó sẽ slug chính nó, lower : đưa về chữ thường hết\r\n      cloneValues.status = Number(values.status);\r\n      console.log(cloneValues);\r\n\r\n      // thêm posts\r\n      const colRef = collection(db, \"posts\");\r\n      await addDoc(colRef, {\r\n        ...cloneValues,\r\n        image,\r\n        imageName,\r\n        // categoryId: cloneValues.category.id,\r\n        // userId: cloneValues.user.id,\r\n        content: content,\r\n        createdAt: serverTimestamp(),\r\n      });\r\n\r\n      toast.success(\"Create new Posts successfully!!\");\r\n      navigate(\"/my-post\");\r\n      //reset\r\n      reset({\r\n        title: \"\",\r\n        slug: \"\",\r\n        status: 2,\r\n        category: {},\r\n        user: {},\r\n        hot: false,\r\n        image: \"\",\r\n        content: \"\",\r\n      });\r\n      setImage(\"\");\r\n      setProgress(0);\r\n      setTitleCategory({});\r\n      //---------\r\n    } catch (error) {\r\n      setLoading(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [titleCategory, setTitleCategory] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const modules = useMemo(\r\n    () => ({\r\n      toolbar: [\r\n        [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n        [\"blockquote\"],\r\n        [{ header: 1 }, { header: 2 }], // custom button values\r\n        [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n        [\"link\", \"image\"],\r\n      ],\r\n    }),\r\n    []\r\n  );\r\n\r\n  //query\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const colRef = collection(db, \"categories\");\r\n      const q = query(colRef, where(\"status\", \"==\", 1));\r\n\r\n      const querySnapshot = await getDocs(q);\r\n      let results = [];\r\n      querySnapshot.forEach((doc) => {\r\n        results.push({ id: doc.id, ...doc.data() });\r\n      });\r\n      setCategories(results);\r\n    }\r\n    getData();\r\n  });\r\n  //handle dropdown option đã tôi ưu hóa kiểu nhét cả 1 object category và field : categories\r\n  const handleClickOption = async (item) => {\r\n    // setValue(\"categoryId\", item.id);\r\n    const colRef = doc(db, \"categories\", item.id);\r\n    const docData = await getDoc(colRef);\r\n    setValue(\"category\", {\r\n      id: docData.id,\r\n      ...docData.data(),\r\n    });\r\n\r\n    setTitleCategory(item);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"Monkey - Add new Posts\";\r\n  });\r\n\r\n  return (\r\n    <PostAddNewStyles>\r\n      <h1 className=\"dashboard-heading\">Add new post</h1>\r\n      <form action=\"\" onSubmit={handleSubmit(addPostHandler)}>\r\n        <div className=\"grid grid-cols-1 gap-x-10 mb-10 items-start md:grid-cols-2 md:gap-x-10 md:mb-10 md:items-start \">\r\n          <Field>\r\n            <Label>Title</Label>\r\n            <Input\r\n              control={control}\r\n              placeholder=\"Enter your title\"\r\n              name=\"title\"\r\n              // required\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label>Slug</Label>\r\n            <Input\r\n              control={control}\r\n              placeholder=\"Enter your slug\"\r\n              name=\"slug\"\r\n            ></Input>\r\n          </Field>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 gap-x-10 mb-10 items-start md:grid-cols-2 md:gap-x-10 md:mb-10 md:items-start\">\r\n          <Field>\r\n            <Label>Image</Label>\r\n            <ImageUpload\r\n              onChange={handleSelectImage}\r\n              className=\"h-[250px]\"\r\n              handleDeleteImage={handleDeleteImage}\r\n              progress={progress}\r\n              image={image}\r\n            ></ImageUpload>\r\n          </Field>\r\n          <Field>\r\n            <Label>Category</Label>\r\n            <Dropdown>\r\n              <Select\r\n                placeholder={titleCategory.name || \"Select the category\"}\r\n              ></Select>\r\n              <List>\r\n                {categories.length > 0 &&\r\n                  categories.map((item) => (\r\n                    <Options\r\n                      key={item.name}\r\n                      onClick={() => handleClickOption(item)}\r\n                    >\r\n                      {item.name}\r\n                    </Options>\r\n                  ))}\r\n              </List>\r\n            </Dropdown>\r\n          </Field>\r\n\r\n          {/* <Field>\r\n            <Label>Author</Label>\r\n            <Input control={control} placeholder=\"Find the author\"></Input>\r\n          </Field> */}\r\n        </div>\r\n        <div className=\"mb-10 entry-content\">\r\n          <Label>Content</Label>\r\n          <div className=\"mt-4\">\r\n            <ReactQuill\r\n              modules={modules}\r\n              theme=\"snow\"\r\n              value={content}\r\n              onChange={setContent}\r\n              className=\"w-full max-w-[350px] md:max-w-[760px] lg:max-w-full \"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 gap-x-10 mb-10 items-start md:grid-cols-2 md:gap-x-10 md:mb-10 md:items-start\">\r\n          <Field>\r\n            <Label>Feature Post</Label>\r\n            <Toggle\r\n              on={watchHot === true}\r\n              onClick={() => setValue(\"hot\", !watchHot)}\r\n            ></Toggle>\r\n          </Field>\r\n          <Field>\r\n            <Label>Status</Label>\r\n            <div className=\"flex items-center gap-x-5\">\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.APPROVED}\r\n                // onClick={() => setValue(\"status\", \"approved\")}\r\n                value={postStatus.APPROVED}\r\n              >\r\n                Approved\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.PENDING}\r\n                // onClick={() => setValue(\"status\", \"pending\")}\r\n                value={postStatus.PENDING}\r\n              >\r\n                Pending\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.REJECTED}\r\n                // onClick={() => setValue(\"status\", \"reject\")}\r\n                value={postStatus.REJECTED}\r\n              >\r\n                Reject\r\n              </Radio>\r\n            </div>\r\n          </Field>\r\n        </div>\r\n        <div className=\"flex mr-14\">\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mx-auto w-[200px]\"\r\n            isLoading={loading}\r\n            disable={loading}\r\n          >\r\n            Add new post\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </PostAddNewStyles>\r\n  );\r\n};\r\n\r\nexport default PostAddNew;\r\n"],"names":["PostAddNewStyles","styled","userInfo","useAuth","useState","content","setContent","useForm","mode","defaultValues","title","slug","status","category","hot","user","control","watch","setValue","handleSubmit","getValues","reset","formState","errors","useFireBaseImage","handleSelectImage","setImage","setProgress","handleDeleteImage","progress","image","imageName","watchStatus","watchHot","navigate","useNavigate","useEffect","email","q","query","collection","db","where","getDocs","forEach","doc","id","data","fetchUserData","addPostHandler","values","setLoading","cloneValues","slugify","lower","Number","console","log","colRef","addDoc","createdAt","serverTimestamp","toast","setTitleCategory","categories","setCategories","titleCategory","loading","modules","useMemo","toolbar","header","list","querySnapshot","results","push","getData","handleClickOption","item","getDoc","docData","document","className","action","onSubmit","placeholder","name","onChange","length","map","onClick","theme","value","on","checked","postStatus","type","isLoading","disable"],"sourceRoot":""}