{"version":3,"file":"static/js/376.1c4a8c3d.chunk.js","mappings":"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","sources":["components/action/ActionDelete.js","components/action/ActionEdit.js","components/action/ActionView.js","components/button/Button.js","components/dropdown/Dropdown.js","components/dropdown/List.js","components/dropdown/Options.js","components/dropdown/Select.js","components/dropdown/dropdown-context.js","components/label/LabelStatus.js","components/table/Table.js","module/dashboard/DashboardHeading.js","module/post/PostManage.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst ActionDelete = ({ onClick = () => {} }) => {\r\n  return (\r\n    <span\r\n      className=\"flex items-center justify-center w-10 h-10 border border-gray-200 rounded cursor-pointer\"\r\n      onClick={onClick}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"w-5 h-5\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n        />\r\n      </svg>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ActionDelete;\r\n","import React from \"react\";\r\n\r\nconst ActionEdit = ({ onClick = () => {} }) => {\r\n  return (\r\n    <span\r\n      className=\"flex items-center justify-center w-10 h-10 border border-gray-200 rounded cursor-pointer\"\r\n      onClick={onClick}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"w-5 h-5\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\r\n        />\r\n      </svg>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ActionEdit;\r\n","import React from \"react\";\r\n\r\nconst ActionView = ({ onClick = () => {} }) => {\r\n  return (\r\n    <span\r\n      className=\"flex items-center justify-center w-10 h-10 border border-gray-200 rounded cursor-pointer\"\r\n      onClick={onClick}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"w-5 h-5\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n        />\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\r\n        />\r\n      </svg>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ActionView;\r\n","import React, { Children } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst ButtonStyles = styled.button`\r\n  cursor: pointer;\r\n\r\n  /* padding: 10px 0; */\r\n  height: ${(props) => props.height || \"50px\"};\r\n  line-height: 1;\r\n\r\n  ${(props) =>\r\n    props.kind === \"secondary\" &&\r\n    css`\r\n      color: ${(props) => props.theme.primary};\r\n      background-color: white;\r\n    `};\r\n  ${(props) =>\r\n    props.kind === \"primary\" &&\r\n    css`\r\n      color: white;\r\n      background-image: linear-gradient(\r\n        to right bottom,\r\n        ${(props) => props.theme.primary},\r\n        ${(props) => props.theme.secondary}\r\n      );\r\n    `};\r\n  ${(props) =>\r\n    props.kind === \"ghost\" &&\r\n    css`\r\n      color: ${(props) => props.theme.primary};\r\n      background-color: rgba(29, 192, 113, 0.1);\r\n      padding: 10px;\r\n    `};\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  &:disabled {\r\n    opacity: 0.5;\r\n    pointer-events: none;\r\n  }\r\n  .loadingsvg {\r\n    width: 40px;\r\n    height: 40px;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\n/**\r\n * @requires\r\n * @param {string} type Type of button 'button' | 'submit'\r\n * @returns\r\n */\r\nconst Button = ({\r\n  type = \"button\",\r\n  onClick = () => {},\r\n  children,\r\n  kind = \"primary\",\r\n  ...props\r\n}) => {\r\n  const { isLoading, to } = props; //destructuring\r\n\r\n  // !! convert sang kiểu boolean để trả về kiểu true or false thôi\r\n  const child = !!isLoading ? (\r\n    <img src=\"/Spin-1s-200px.svg\" className=\"loadingsvg\" alt=\"\" />\r\n  ) : (\r\n    children\r\n  );\r\n\r\n  //button khi có prop to sẽ điều hướng trang được\r\n  if (to !== \"\" && typeof to === \"string\") {\r\n    return (\r\n      <NavLink to={to}>\r\n        <ButtonStyles type={type} kind={kind} {...props}>\r\n          {child}\r\n        </ButtonStyles>\r\n      </NavLink>\r\n    );\r\n  }\r\n  return (\r\n    <ButtonStyles type={type} kind={kind} onClick={onClick} {...props}>\r\n      {child}\r\n    </ButtonStyles>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.oneOf([\"button\", \"submit\"]),\r\n  isLoading: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport { DropdownProvider } from \"./dropdown-context\";\r\n\r\nconst Dropdown = ({ children, ...props }) => {\r\n  return (\r\n    <DropdownProvider {...props}>\r\n      <div className=\"relative inline-block w-full z-30 \">{children}</div>\r\n    </DropdownProvider>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React from \"react\";\r\nimport { useDropdown } from \"./dropdown-context\";\r\n\r\nconst List = ({ children }) => {\r\n  const { show } = useDropdown();\r\n  return (\r\n    <div>\r\n      {show && (\r\n        <div className=\"absolute top-full left-0 w-full bg-white shadow-sm\">\r\n          {children}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { useDropdown } from \"./dropdown-context\";\r\n\r\nconst Options = (props) => {\r\n  const { onClick } = props;\r\n  const { setShow } = useDropdown();\r\n\r\n  const handleClick = () => {\r\n    onClick && onClick(); //khi có onClick thì thực hiện hàm onClick\r\n    setShow(false); //đồng thời setShow = false để đóng dropdown\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"px-5 py-4 cursor-pointer flex items-center justify-between hover:bg-gray-100 \"\r\n      onClick={handleClick}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import React from \"react\";\r\nimport { useDropdown } from \"./dropdown-context\";\r\n\r\nconst Select = ({ placeholder = \"\" }) => {\r\n  const { show, toggle } = useDropdown();\r\n  return (\r\n    <div\r\n      className=\"flex items-center justify-between p-5 bg-[#E7ECF3] rounded cursor-pointer font-medium\"\r\n      onClick={toggle}\r\n    >\r\n      <span>{placeholder}</span>\r\n      <span>\r\n        {show ? (\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-6 w-6\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M5 15l7-7 7 7\"\r\n            />\r\n          </svg>\r\n        ) : (\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-6 w-6\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M19 9l-7 7-7-7\"\r\n            />\r\n          </svg>\r\n        )}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import { createContext, useContext, useState } from \"react\";\r\n\r\nconst DropdownContext = createContext();\r\nfunction DropdownProvider(props) {\r\n  const [show, setShow] = useState(false);\r\n  const toggle = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  const values = { show, setShow, toggle };\r\n  return (\r\n    <DropdownContext.Provider value={values}>\r\n      {props.children}\r\n    </DropdownContext.Provider>\r\n  );\r\n}\r\nfunction useDropdown() {\r\n  const context = useContext(DropdownContext);\r\n  if (typeof context === \"undefined\")\r\n    throw new Error(\"useDropdown must be used within DropdownProvider\");\r\n  return context;\r\n}\r\nexport { useDropdown, DropdownProvider };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LabelStatusStyles = styled.span`\r\n  display: inline-block;\r\n  padding: 10px 15px;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n/**\r\n *\r\n * @param type - \"default\" \"success\" \"warning\" \"danger\"\r\n * @returns\r\n */\r\nconst LabelStatus = ({ children, type = \"default\" }) => {\r\n  let styleClassName = \"text-gray-500 bg-gray-100\";\r\n  switch (type) {\r\n    case \"success\":\r\n      styleClassName = \"text-green-500 bg-green-100\";\r\n      break;\r\n    case \"warning\":\r\n      styleClassName = \"text-orange-500 bg-orange-100\";\r\n      break;\r\n    case \"danger\":\r\n      styleClassName = \"text-red-500 bg-red-100\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <LabelStatusStyles className={styleClassName}>{children}</LabelStatusStyles>\r\n  );\r\n};\r\nLabelStatus.propTypes = {\r\n  children: PropTypes.node,\r\n  type: PropTypes.oneOf([\"default\", \"success\", \"warning\", \"danger\"]).isRequired,\r\n};\r\nexport default LabelStatus;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst TableStyles = styled.div`\r\n  overflow-x: auto;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  /* height: 300px; */\r\n  /* Mobile styles (<640px) */\r\n  @media (max-width: 640px) {\r\n    /* Mobile styles */\r\n    width: 330px;\r\n  }\r\n  /* Tablet styles (>=768px and <1024px) */\r\n  @media (min-width: 640px) and (max-width: 1023px) {\r\n    width: 800px;\r\n  }\r\n  table {\r\n    width: 100%;\r\n  }\r\n  thead {\r\n    background-color: #f7f7f8;\r\n  }\r\n  th,\r\n  td {\r\n    vertical-align: middle;\r\n    white-space: nowrap;\r\n  }\r\n  th {\r\n    padding: 20px 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n  }\r\n  td {\r\n    padding: 15px 30px;\r\n  }\r\n  tbody {\r\n  }\r\n`;\r\nconst Table = ({ children }) => {\r\n  return (\r\n    <TableStyles>\r\n      <table>{children}</table>\r\n    </TableStyles>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nconst DashboardHeading = ({ title = \"\", desc = \"\", children }) => {\r\n  return (\r\n    <div className=\"mb-4 flex items-start justify-between\">\r\n      <div>\r\n        <h1 className=\"dashboard-heading\">{title}</h1>\r\n        <p className=\"dashboard-short-desc\">{desc}</p>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardHeading;\r\n","import React from \"react\";\r\nimport DashboardHeading from \"../dashboard/DashboardHeading\";\r\nimport Dropdown from \"../../components/dropdown/Dropdown\";\r\nimport Table from \"../../components/table/Table\";\r\nimport Button from \"../../components/button/Button\";\r\nimport Select from \"../../components/dropdown/Select\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  collection,\r\n  deleteDoc,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  limit,\r\n  onSnapshot,\r\n  query,\r\n  startAfter,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"../../firebase-app/firebase-config\";\r\nimport ActionView from \"../../components/action/ActionView\";\r\nimport ActionDelete from \"../../components/action/ActionDelete\";\r\nimport ActionEdit from \"../../components/action/ActionEdit\";\r\nimport { debounce } from \"lodash\";\r\nimport { postStatus, userRole } from \"../../utils/constants\";\r\nimport LabelStatus from \"../../components/label/LabelStatus\";\r\nimport Swal from \"sweetalert2\";\r\nimport List from \"../../components/dropdown/List\";\r\nimport Options from \"../../components/dropdown/Options\";\r\nimport { useAuth } from \"../../contexts/auth-context\";\r\n\r\nconst POST_PER_PAGE = 2;\r\nconst PostManage = () => {\r\n  const [postList, setPostList] = useState([]);\r\n  const navigate = useNavigate();\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [lastDoc, setLoadDoc] = useState();\r\n  const [total, setTotal] = useState(0);\r\n  const [categories, setCategories] = useState([]);\r\n  const [searchWithCategory, setSearchWithCategory] = useState(\"\");\r\n  const [titleCategory, setTitleCategory] = useState(\"\");\r\n  const handleLoadMorePost = async () => {\r\n    const nextRef = query(\r\n      collection(db, \"posts\"),\r\n      startAfter(lastDoc),\r\n      limit(1) //load 1 lần được 1 cái\r\n    );\r\n\r\n    onSnapshot(nextRef, (snapshot) => {\r\n      let results = [];\r\n      snapshot.forEach((doc) => {\r\n        results.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      setPostList([...postList, ...results]);\r\n    });\r\n\r\n    const documentSnapshots = await getDocs(nextRef);\r\n    // Get the last visible document\r\n    const lastVisible =\r\n      documentSnapshots.docs[documentSnapshots.docs.length - 1];\r\n    setLoadDoc(lastVisible);\r\n  };\r\n\r\n  //có setPostList để đổ ra giao diện\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const colRef = collection(db, \"posts\");\r\n\r\n      // const newRef = searchWithCategory\r\n      //   ? query(\r\n      //       colRef,\r\n      //       // where(\"title\", \">=\", filter),\r\n      //       // where(\"title\", \"<=\", filter + \"utf8\"),\r\n      //       where(\"category.name\", \"==\", searchWithCategory)\r\n      //     )\r\n      //   : query(colRef, limit(1));\r\n\r\n      // const newRef = searchWithCategory\r\n      //   ? query(colRef, where(\"category.name\", \"==\", searchWithCategory))\r\n      //   : query(colRef, limit(1));\r\n\r\n      //phục vụ loadmore\r\n\r\n      let newRef = colRef;\r\n\r\n      if (filter) {\r\n        newRef = query(newRef, where(\"title\", \">=\", filter));\r\n        newRef = query(newRef, where(\"title\", \"<=\", filter + \"utf8\"));\r\n      }\r\n\r\n      //bỏ này ra sẽ tìm kiếm được kiểu dropdown\r\n      // if (searchWithCategory) {\r\n      //   newRef = query(\r\n      //     newRef,\r\n      //     where(\"category.name\", \"==\", searchWithCategory)\r\n      //   );\r\n      // }\r\n\r\n      if (!filter && !searchWithCategory) {\r\n        newRef = query(newRef, limit(POST_PER_PAGE));\r\n      }\r\n\r\n      const documentSnapshots = await getDocs(newRef);\r\n      const lastVisible =\r\n        documentSnapshots.docs[documentSnapshots.docs.length - 1];\r\n      setLoadDoc(lastVisible);\r\n      //-------------------\r\n\r\n      onSnapshot(colRef, (snapshot) => {\r\n        setTotal(snapshot.size);\r\n      });\r\n\r\n      onSnapshot(newRef, (snapshot) => {\r\n        let results = [];\r\n        snapshot.forEach((doc) => {\r\n          results.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        setPostList(results);\r\n      });\r\n    }\r\n    fetchData();\r\n  }, [filter, searchWithCategory]);\r\n\r\n  const handleInputFilter = debounce((e) => {\r\n    setFilter(e.target.value);\r\n  }, 500);\r\n\r\n  //chức năng hide\r\n  const handleHidePost = async () => {\r\n    const colRef = collection(db, \"posts\");\r\n    onSnapshot(query(colRef, limit(POST_PER_PAGE)), (snapshot) => {\r\n      let results = [];\r\n      snapshot.forEach((doc) => {\r\n        results.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      setPostList(results);\r\n    });\r\n\r\n    const documentSnapshots = await getDocs(\r\n      query(colRef, limit(POST_PER_PAGE))\r\n    );\r\n    // Get the last visible document\r\n    const lastVisible =\r\n      documentSnapshots.docs[documentSnapshots.docs.length - 1];\r\n    setLoadDoc(lastVisible); //set lại cái loaddoc này mới loadMore đc tiếp\r\n  };\r\n\r\n  const renderPostStatus = (status) => {\r\n    switch (status) {\r\n      case postStatus.APPROVED:\r\n        return <LabelStatus type=\"success\">APPROVED</LabelStatus>;\r\n      case postStatus.PENDING:\r\n        return <LabelStatus type=\"warning\">PENDING</LabelStatus>;\r\n      case postStatus.REJECTED:\r\n        return <LabelStatus type=\"danger\">REJECTED</LabelStatus>;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  //xử lí xóa\r\n  const handleDeleteCategory = async (postId) => {\r\n    const colRef = doc(db, \"posts\", postId);\r\n\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        await deleteDoc(colRef); //thực hiện xóa ở cloud storge\r\n        Swal.fire(\"Deleted!\", \"Your Post has been deleted.\", \"success\");\r\n      }\r\n    });\r\n  };\r\n  // console.log(postList);\r\n\r\n  //set dữ liệu category vào setCategories\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const colRef = collection(db, \"categories\");\r\n      // const q = query(colRef, where(\"status\", \"==\", 1));\r\n\r\n      const querySnapshot = await getDocs(colRef);\r\n      let results = [];\r\n      querySnapshot.forEach((doc) => {\r\n        results.push({ id: doc.id, ...doc.data() });\r\n      });\r\n      setCategories(results);\r\n    }\r\n    getData();\r\n  }, [setCategories]);\r\n\r\n  //Click ở dropdown\r\n  const handleClickOption = async (item) => {\r\n    // setValue(\"categoryId\", item.id);\r\n    const colRef = doc(db, \"categories\", item.id);\r\n    const docData = await getDoc(colRef);\r\n\r\n    setSearchWithCategory(docData.data().name);\r\n    // console.log(docData.data().name);\r\n\r\n    setTitleCategory(item.name);\r\n  };\r\n\r\n  const { userInfo } = useAuth();\r\n  if (userInfo.role !== userRole.ADMIN)\r\n    return (\r\n      <div className=\"text-[30px] font-semibold text-green-500 \">\r\n        This page is for admins only\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n      <DashboardHeading\r\n        title=\"All posts\"\r\n        desc=\"Manage all posts\"\r\n      ></DashboardHeading>\r\n      <div className=\"mb-10 flex justify-end gap-5\">\r\n        <div className=\"w-full max-w-[300px]\">\r\n          {/* <Dropdown> */}\r\n          <Dropdown>\r\n            <Select placeholder={titleCategory || \"Choose Category\"}>\r\n              Category\r\n            </Select>\r\n            <List>\r\n              {categories.length > 0 &&\r\n                categories.map((item) => (\r\n                  <Options\r\n                    key={item.name}\r\n                    onClick={() => handleClickOption(item)}\r\n                  >\r\n                    {item.name}\r\n                  </Options>\r\n                ))}\r\n            </List>\r\n          </Dropdown>\r\n          {/* </Dropdown> */}\r\n        </div>\r\n        <div className=\"w-full max-w-[300px]\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"w-full p-4 rounded-lg border border-solid border-gray-300\"\r\n            placeholder=\"Search post...\"\r\n            onChange={handleInputFilter}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Post</th>\r\n            <th>Category</th>\r\n            <th>Author</th>\r\n            <th>Status</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {postList.length > 0 &&\r\n            postList.map((post) => (\r\n              <tr key={post.id}>\r\n                <td title={post.id}>{post.id.slice(0, 5) + \"...\"}</td>\r\n                <td>\r\n                  <div className=\"flex items-center gap-x-3\">\r\n                    <img\r\n                      src={post.image}\r\n                      alt=\"\"\r\n                      className=\"w-[66px] h-[55px] rounded object-cover\"\r\n                    />\r\n                    <div className=\"\">\r\n                      <h3\r\n                        title={post.title}\r\n                        className=\"font-semibold whitespace-nowrap overflow-hidden overflow-ellipsis max-w-[150px] \"\r\n                      >\r\n                        {post.title}\r\n                      </h3>\r\n                      <time className=\"text-sm text-gray-500\">\r\n                        {new Date(\r\n                          post?.createdAt?.seconds * 1000\r\n                        ).toLocaleDateString(\"vi-VI\")}\r\n                      </time>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <span className=\"text-gray-500\">{post.category?.name}</span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"text-gray-500\">{post.user?.fullname}</span>\r\n                </td>\r\n                <td>{renderPostStatus(post.status)}</td>\r\n                <td>\r\n                  <div className=\"flex items-center gap-x-3 text-gray-500\">\r\n                    <ActionView\r\n                      onClick={() => navigate(`/${post.slug}`)}\r\n                    ></ActionView>\r\n                    <ActionEdit\r\n                      onClick={() =>\r\n                        navigate(`/manage/update-post?id=${post.id}`)\r\n                      }\r\n                    ></ActionEdit>\r\n                    <ActionDelete\r\n                      onClick={() => handleDeleteCategory(post.id)}\r\n                    ></ActionDelete>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </Table>\r\n      <div className=\"mt-10 text-center\">\r\n        {/* <Pagination></Pagination> */}\r\n        {total > postList.length && !filter && (\r\n          <Button\r\n            kind=\"ghost\"\r\n            className=\"mx-auto w-[200px]\"\r\n            onClick={handleLoadMorePost}\r\n          >\r\n            See more+\r\n          </Button>\r\n        )}\r\n\r\n        {total <= postList.length && !filter && (\r\n          <Button\r\n            kind=\"ghost\"\r\n            className=\"mx-auto w-[200px]\"\r\n            onClick={handleHidePost}\r\n          >\r\n            Hide\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostManage;\r\n"],"names":["onClick","className","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","ButtonStyles","styled","props","height","kind","css","theme","primary","secondary","type","children","isLoading","to","child","src","alt","show","useDropdown","setShow","placeholder","toggle","DropdownContext","createContext","DropdownProvider","useState","values","Provider","value","context","useContext","Error","LabelStatusStyles","styleClassName","TableStyles","title","desc","postList","setPostList","navigate","useNavigate","filter","setFilter","lastDoc","setLoadDoc","total","setTotal","categories","setCategories","searchWithCategory","setSearchWithCategory","titleCategory","setTitleCategory","handleLoadMorePost","nextRef","query","collection","db","startAfter","limit","onSnapshot","snapshot","results","forEach","doc","push","id","data","getDocs","documentSnapshots","lastVisible","docs","length","useEffect","colRef","newRef","where","size","fetchData","handleInputFilter","debounce","e","target","handleHidePost","renderPostStatus","status","postStatus","handleDeleteCategory","postId","Swal","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteDoc","querySnapshot","getData","handleClickOption","item","getDoc","docData","name","useAuth","userInfo","role","userRole","map","onChange","post","slice","image","Date","createdAt","seconds","toLocaleDateString","category","user","fullname","slug"],"sourceRoot":""}