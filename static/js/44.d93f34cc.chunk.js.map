{"version":3,"file":"static/js/44.d93f34cc.chunk.js","mappings":"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","sources":["module/dashboard/DashboardHeading.js","module/post/PostUpdateWithUser.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst DashboardHeading = ({ title = \"\", desc = \"\", children }) => {\r\n  return (\r\n    <div className=\"mb-4 flex items-start justify-between\">\r\n      <div>\r\n        <h1 className=\"dashboard-heading\">{title}</h1>\r\n        <p className=\"dashboard-short-desc\">{desc}</p>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardHeading;\r\n","import React, { useMemo } from \"react\";\r\nimport DashboardHeading from \"../dashboard/DashboardHeading\";\r\nimport Field from \"../../components/field/Field\";\r\nimport Label from \"../../components/label/Label\";\r\nimport Input from \"../../components/input/Input\";\r\nimport Dropdown from \"../../components/dropdown/Dropdown\";\r\nimport Select from \"../../components/dropdown/Select\";\r\nimport List from \"../../components/dropdown/List\";\r\nimport Options from \"../../components/dropdown/Options\";\r\nimport Toggle from \"../../components/toggle/Toggle\";\r\nimport Radio from \"../../components/checkbox/Radio\";\r\nimport Button from \"../../components/button/Button\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { postStatus, userRole } from \"../../utils/constants\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  serverTimestamp,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"../../firebase-app/firebase-config\";\r\nimport { useState } from \"react\";\r\nimport slugify from \"slugify\";\r\nimport { toast } from \"react-toastify\";\r\nimport ImageUpload from \"../../components/image/ImageUpload\";\r\nimport useFireBaseImage from \"../../hooks/useFireBaseImage\";\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n// import ImageUploader from \"quill-image-uploader\";\r\n// import { useAuth } from \"../../contexts/auth-context\";\r\n// // Quill.register(\"modules/imageUploader\", ImageUploader);\r\n\r\nconst PostUpdateWithUser = () => {\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    watch,\r\n    reset,\r\n    setValue,\r\n    getValues,\r\n    formState: { isSubmitting, isValid },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: {},\r\n  });\r\n\r\n  const [params] = useSearchParams();\r\n  const postId = params.get(\"id\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [titleCategory, setTitleCategory] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [content, setContent] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const imageUrl = getValues(\"image\");\r\n\r\n  const deleteImagePost = async () => {\r\n    //khi ấn xóa và thành công nó sẽ cập nhật lại trong data base\r\n    const colRef = doc(db, \"posts\", postId);\r\n    await updateDoc(colRef, {\r\n      image: \"\",\r\n      imageName: \"\",\r\n    });\r\n  };\r\n\r\n  const {\r\n    handleSelectImage,\r\n    setImage,\r\n    setProgress,\r\n    handleDeleteImage,\r\n    progress,\r\n    image,\r\n    imageName,\r\n  } = useFireBaseImage(setValue, getValues, deleteImagePost);\r\n\r\n  useEffect(() => {\r\n    setImage(imageUrl); //để khi ấn vào xong bay sang trang update-user nó sẽ hiện avatar lên\r\n  }, [imageUrl, setImage]);\r\n\r\n  //reset về trạng thái mà ta lấy được thông qua Id sẽ giúp điền các giữu liệu vào form\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const colRef = doc(db, \"posts\", postId);\r\n      const singleDoc = await getDoc(colRef);\r\n      reset(singleDoc.data()); //reset về trạng thái mà ta lấy được thông qua Id sẽ giúp điền các giữu liệu vào form\r\n    }\r\n    fetchData();\r\n  }, [postId, reset]);\r\n\r\n  //phục vụ drop down\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const colRef = collection(db, \"categories\");\r\n      // const q = query(colRef, where(\"status\", \"==\", 1));\r\n\r\n      const querySnapshot = await getDocs(colRef);\r\n      let results = [];\r\n      querySnapshot.forEach((doc) => {\r\n        results.push({ id: doc.id, ...doc.data() });\r\n      });\r\n      setCategories(results);\r\n    }\r\n    getData();\r\n  });\r\n  // console.log(categories.name);\r\n\r\n  //khi ấn sửa sang trang update nó sẽ bắn tên lên dropdown đồng thời setcontent để lấy nội dung content\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const colRef = doc(db, \"posts\", postId);\r\n      const singleDoc = await getDoc(colRef);\r\n      setSelectedCategory(singleDoc.data().category.name);\r\n      setContent(singleDoc.data().content || \"\");\r\n      // console.log(singleDoc.data().category.name);\r\n    }\r\n    fetchData();\r\n  }, [postId]);\r\n\r\n  //Chọn ở dropdown nó sẽ bắn tên lên đầu\r\n  const handleClickOption = async (item) => {\r\n    // setValue(\"categoryId\", item.id);\r\n    const colRef = doc(db, \"categories\", item.id);\r\n    const docData = await getDoc(colRef);\r\n\r\n    console.log(docData.data().name);\r\n    setValue(\"category\", {\r\n      ...docData.data(),\r\n    });\r\n\r\n    setSelectedCategory(docData.data().name);\r\n  };\r\n\r\n  const modules = useMemo(\r\n    () => ({\r\n      toolbar: [\r\n        [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n        [\"blockquote\"],\r\n        [{ header: 1 }, { header: 2 }], // custom button values\r\n        [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n        [\"link\", \"image\"],\r\n      ],\r\n    }),\r\n    []\r\n  );\r\n\r\n  // const { userInfo } = useAuth();\r\n  // if (userInfo.role !== userRole.ADMIN) return navigate(\"/\");\r\n\r\n  if (!postId || postId.title) return null;\r\n  //xử lí update\r\n  const updatePostHandler = async (values) => {\r\n    if (!isValid) return;\r\n    setLoading(true);\r\n    try {\r\n      const cloneValues = { ...values };\r\n      cloneValues.slug = slugify(values.slug || values.title, { lower: true }); // người dùng nhập tiếng việt nó sẽ slug chính nó, lower : đưa về chữ thường hết\r\n      cloneValues.status = Number(values.status);\r\n\r\n      // console.log(cloneValues);\r\n      // thêm posts\r\n      const colRef = doc(db, \"posts\", postId);\r\n      await updateDoc(colRef, {\r\n        ...cloneValues,\r\n        image: image,\r\n        imageName: imageName,\r\n        content: content,\r\n        createdAt: serverTimestamp(),\r\n      });\r\n      navigate(\"/dashboard\");\r\n      toast.success(\"Create new Posts successfully!!\");\r\n      //reset\r\n      reset({\r\n        title: \"\",\r\n        slug: \"\",\r\n        status: 2,\r\n        category: {},\r\n        user: {},\r\n        hot: false,\r\n        image: \"\",\r\n      });\r\n      setImage(\"\");\r\n      setProgress(0);\r\n      setTitleCategory({});\r\n    } catch (error) {\r\n      setLoading(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n    // console.log(values);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DashboardHeading\r\n        title=\"Update My Posts\"\r\n        desc=\"Manage my posts\"\r\n      ></DashboardHeading>\r\n\r\n      <form action=\"\" onSubmit={handleSubmit(updatePostHandler)}>\r\n        <div className=\"grid grid-cols-1 gap-x-10 mb-10 items-start md:grid-cols-2 md:gap-x-10 md:mb-10 md:items-start\">\r\n          <Field>\r\n            <Label>Title</Label>\r\n            <Input\r\n              control={control}\r\n              placeholder=\"Enter your title\"\r\n              name=\"title\"\r\n              required\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label>Slug</Label>\r\n            <Input\r\n              control={control}\r\n              placeholder=\"Enter your slug\"\r\n              name=\"slug\"\r\n            ></Input>\r\n          </Field>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 gap-x-10 mb-10 items-start md:grid-cols-2 md:gap-x-10 md:mb-10 md:items-start\">\r\n          <Field>\r\n            <Label>Image</Label>\r\n            <ImageUpload\r\n              onChange={handleSelectImage}\r\n              className=\"h-[250px]\"\r\n              handleDeleteImage={handleDeleteImage}\r\n              progress={progress}\r\n              image={image}\r\n            ></ImageUpload>\r\n          </Field>\r\n          <Field>\r\n            <Label>Category</Label>\r\n            <Dropdown>\r\n              <Select\r\n                placeholder={selectedCategory || \"Select the category\"}\r\n              ></Select>\r\n              <List>\r\n                {categories.length > 0 &&\r\n                  categories.map((item) => (\r\n                    <Options\r\n                      key={item.name}\r\n                      onClick={() => handleClickOption(item)}\r\n                    >\r\n                      {item.name}\r\n                    </Options>\r\n                  ))}\r\n              </List>\r\n            </Dropdown>\r\n          </Field>\r\n\r\n          {/* <Field>\r\n            <Label>Author</Label>\r\n            <Input control={control} placeholder=\"Find the author\"></Input>\r\n          </Field> */}\r\n        </div>\r\n        <div className=\"mb-10 entry-content\">\r\n          <Label>Content</Label>\r\n          <div className=\"mt-4\">\r\n            <ReactQuill\r\n              modules={modules}\r\n              theme=\"snow\"\r\n              value={content}\r\n              onChange={setContent}\r\n              className=\"w-full max-w-[350px] md:max-w-[760px] lg:max-w-full \"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"gap-x-5 flex justify-center\">\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mx-auto w-[200px]\"\r\n              isLoading={loading}\r\n              disable={loading}\r\n            >\r\n              Update My Post\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              to=\"/my-post\"\r\n              className=\"mx-auto w-[100px] sm:w-[200px] md:w-[200px] lg:w-[200px]  \"\r\n              kind=\"ghost\"\r\n              type=\"submit\"\r\n            >\r\n              Back\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostUpdateWithUser;\r\n"],"names":["title","desc","children","className","useForm","mode","defaultValues","control","handleSubmit","reset","watch","setValue","getValues","formState","isValid","isSubmitting","useSearchParams","postId","get","useState","categories","setCategories","setTitleCategory","selectedCategory","setSelectedCategory","loading","setLoading","content","setContent","navigate","useNavigate","imageUrl","deleteImagePost","colRef","doc","db","updateDoc","image","imageName","useFireBaseImage","handleSelectImage","setImage","setProgress","handleDeleteImage","progress","useEffect","getDoc","singleDoc","data","fetchData","collection","getDocs","querySnapshot","results","forEach","push","id","getData","category","name","handleClickOption","item","docData","console","log","modules","useMemo","toolbar","header","list","updatePostHandler","values","cloneValues","slug","slugify","lower","status","Number","createdAt","serverTimestamp","toast","user","hot","action","onSubmit","placeholder","required","onChange","length","map","onClick","theme","value","type","isLoading","disable","to","kind"],"sourceRoot":""}