{"version":3,"file":"static/js/297.d2e3bdd3.chunk.js","mappings":"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","sources":["module/dashboard/DashboardHeading.js","module/post/PostUpdate.js","../node_modules/quill-image-uploader/src/blots/image.js","../node_modules/quill-image-uploader/src/quill.imageUploader.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst DashboardHeading = ({ title = \"\", desc = \"\", children }) => {\r\n  return (\r\n    <div className=\"mb-4 flex items-start justify-between\">\r\n      <div>\r\n        <h1 className=\"dashboard-heading\">{title}</h1>\r\n        <p className=\"dashboard-short-desc\">{desc}</p>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardHeading;\r\n","import React, { useMemo } from \"react\";\r\nimport DashboardHeading from \"../dashboard/DashboardHeading\";\r\nimport Field from \"../../components/field/Field\";\r\nimport Label from \"../../components/label/Label\";\r\nimport Input from \"../../components/input/Input\";\r\nimport Dropdown from \"../../components/dropdown/Dropdown\";\r\nimport Select from \"../../components/dropdown/Select\";\r\nimport List from \"../../components/dropdown/List\";\r\nimport Options from \"../../components/dropdown/Options\";\r\nimport Toggle from \"../../components/toggle/Toggle\";\r\nimport Radio from \"../../components/checkbox/Radio\";\r\nimport Button from \"../../components/button/Button\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { postStatus, userRole } from \"../../utils/constants\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  serverTimestamp,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"../../firebase-app/firebase-config\";\r\nimport { useState } from \"react\";\r\nimport slugify from \"slugify\";\r\nimport { toast } from \"react-toastify\";\r\nimport ImageUpload from \"../../components/image/ImageUpload\";\r\nimport useFireBaseImage from \"../../hooks/useFireBaseImage\";\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport ImageUploader from \"quill-image-uploader\";\r\nimport { useAuth } from \"../../contexts/auth-context\";\r\nQuill.register(\"modules/imageUploader\", ImageUploader);\r\n\r\nconst PostUpdate = () => {\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    watch,\r\n    reset,\r\n    setValue,\r\n    getValues,\r\n    formState: { isSubmitting, isValid },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: {},\r\n  });\r\n\r\n  const [params] = useSearchParams();\r\n  const watchStatus = watch(\"status\");\r\n  const watchHot = watch(\"hot\");\r\n  const postId = params.get(\"id\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [titleCategory, setTitleCategory] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [content, setContent] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const imageUrl = getValues(\"image\");\r\n\r\n  const deleteImagePost = async () => {\r\n    //khi ấn xóa và thành công nó sẽ cập nhật lại trong data base\r\n    const colRef = doc(db, \"posts\", postId);\r\n    await updateDoc(colRef, {\r\n      image: \"\",\r\n      imageName: \"\",\r\n    });\r\n  };\r\n\r\n  const {\r\n    handleSelectImage,\r\n    setImage,\r\n    setProgress,\r\n    handleDeleteImage,\r\n    progress,\r\n    image,\r\n    imageName,\r\n  } = useFireBaseImage(setValue, getValues, deleteImagePost);\r\n\r\n  useEffect(() => {\r\n    setImage(imageUrl); //để khi ấn vào xong bay sang trang update-user nó sẽ hiện avatar lên\r\n  }, [imageUrl, setImage]);\r\n\r\n  //reset về trạng thái mà ta lấy được thông qua Id sẽ giúp điền các giữu liệu vào form\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const colRef = doc(db, \"posts\", postId);\r\n      const singleDoc = await getDoc(colRef);\r\n      reset(singleDoc.data()); //reset về trạng thái mà ta lấy được thông qua Id sẽ giúp điền các giữu liệu vào form\r\n    }\r\n    fetchData();\r\n  }, [postId, reset]);\r\n\r\n  //phục vụ drop down\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const colRef = collection(db, \"categories\");\r\n      // const q = query(colRef, where(\"status\", \"==\", 1));\r\n\r\n      const querySnapshot = await getDocs(colRef);\r\n      let results = [];\r\n      querySnapshot.forEach((doc) => {\r\n        results.push({ id: doc.id, ...doc.data() });\r\n      });\r\n      setCategories(results);\r\n    }\r\n    getData();\r\n  });\r\n  // console.log(categories.name);\r\n\r\n  //khi ấn sửa sang trang update nó sẽ bắn tên lên dropdown đồng thời setcontent để lấy nội dung content\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const colRef = doc(db, \"posts\", postId);\r\n      const singleDoc = await getDoc(colRef);\r\n      setSelectedCategory(singleDoc.data().category.name);\r\n      setContent(singleDoc.data().content || \"\");\r\n      // console.log(singleDoc.data().category.name);\r\n    }\r\n    fetchData();\r\n  }, [postId]);\r\n\r\n  //Chọn ở dropdown nó sẽ bắn tên lên đầu\r\n  const handleClickOption = async (item) => {\r\n    // setValue(\"categoryId\", item.id);\r\n    const colRef = doc(db, \"categories\", item.id);\r\n    const docData = await getDoc(colRef);\r\n\r\n    // console.log(docData.data().name);\r\n    setValue(\"category\", {\r\n      id: item.id,\r\n      ...docData.data(),\r\n    });\r\n\r\n    setSelectedCategory(docData.data().name);\r\n  };\r\n\r\n  const modules = useMemo(\r\n    () => ({\r\n      toolbar: [\r\n        [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n        [\"blockquote\"],\r\n        [{ header: 1 }, { header: 2 }], // custom button values\r\n        [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n        [\"link\", \"image\"],\r\n      ],\r\n    }),\r\n    []\r\n  );\r\n\r\n  const { userInfo } = useAuth();\r\n  if (userInfo.role !== userRole.ADMIN)\r\n    return (\r\n      <div className=\"text-[30px] font-semibold text-green-500 \">\r\n        This page is for admins only\r\n      </div>\r\n    );\r\n\r\n  if (!postId || postId.title) return null;\r\n  //xử lí update\r\n  const updatePostHandler = async (values) => {\r\n    if (!isValid) return;\r\n    setLoading(true);\r\n    try {\r\n      const cloneValues = { ...values };\r\n      cloneValues.slug = slugify(values.slug || values.title, { lower: true }); // người dùng nhập tiếng việt nó sẽ slug chính nó, lower : đưa về chữ thường hết\r\n      cloneValues.status = Number(values.status);\r\n\r\n      // console.log(cloneValues);\r\n      // thêm posts\r\n      const colRef = doc(db, \"posts\", postId);\r\n      await updateDoc(colRef, {\r\n        ...cloneValues,\r\n        image: image,\r\n        imageName: imageName,\r\n        content: content,\r\n        createdAt: serverTimestamp(),\r\n      });\r\n      navigate(\"/manage/posts\");\r\n      toast.success(\"Create new Posts successfully!!\");\r\n      //reset\r\n      reset({\r\n        title: \"\",\r\n        slug: \"\",\r\n        status: 2,\r\n        category: {},\r\n        user: {},\r\n        hot: false,\r\n        image: \"\",\r\n      });\r\n      setImage(\"\");\r\n      setProgress(0);\r\n      setTitleCategory({});\r\n    } catch (error) {\r\n      setLoading(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n    // console.log(values);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DashboardHeading\r\n        title=\"Update Posts\"\r\n        desc=\"Manage all posts\"\r\n      ></DashboardHeading>\r\n\r\n      <form action=\"\" onSubmit={handleSubmit(updatePostHandler)}>\r\n        <div className=\"grid grid-cols-1 gap-x-10 mb-10 items-start md:grid-cols-2 md:gap-x-10 md:mb-10 md:items-start\">\r\n          <Field>\r\n            <Label>Title</Label>\r\n            <Input\r\n              control={control}\r\n              placeholder=\"Enter your title\"\r\n              name=\"title\"\r\n              required\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label>Slug</Label>\r\n            <Input\r\n              control={control}\r\n              placeholder=\"Enter your slug\"\r\n              name=\"slug\"\r\n            ></Input>\r\n          </Field>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 gap-x-10 mb-10 items-start md:grid-cols-2 md:gap-x-10 md:mb-10 md:items-start\">\r\n          <Field>\r\n            <Label>Image</Label>\r\n            <ImageUpload\r\n              onChange={handleSelectImage}\r\n              className=\"h-[250px]\"\r\n              handleDeleteImage={handleDeleteImage}\r\n              progress={progress}\r\n              image={image}\r\n            ></ImageUpload>\r\n          </Field>\r\n          <Field>\r\n            <Label>Category</Label>\r\n            <Dropdown>\r\n              <Select\r\n                placeholder={selectedCategory || \"Select the category\"}\r\n              ></Select>\r\n              <List>\r\n                {categories.length > 0 &&\r\n                  categories.map((item) => (\r\n                    <Options\r\n                      key={item.name}\r\n                      onClick={() => handleClickOption(item)}\r\n                    >\r\n                      {item.name}\r\n                    </Options>\r\n                  ))}\r\n              </List>\r\n            </Dropdown>\r\n          </Field>\r\n\r\n          {/* <Field>\r\n            <Label>Author</Label>\r\n            <Input control={control} placeholder=\"Find the author\"></Input>\r\n          </Field> */}\r\n        </div>\r\n        <div className=\"mb-10 entry-content\">\r\n          <Label>Content</Label>\r\n          <div className=\"mt-4\">\r\n            <ReactQuill\r\n              modules={modules}\r\n              theme=\"snow\"\r\n              value={content}\r\n              onChange={setContent}\r\n              className=\"w-full max-w-[350px] md:max-w-[760px] lg:max-w-full \"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 gap-x-10 mb-10 items-start md:grid-cols-2 md:gap-x-10 md:mb-10 md:items-start\">\r\n          <Field>\r\n            <Label>Feature Post</Label>\r\n            <Toggle\r\n              on={watchHot === true}\r\n              onClick={() => setValue(\"hot\", !watchHot)}\r\n            ></Toggle>\r\n          </Field>\r\n          <Field>\r\n            <Label>Status</Label>\r\n            <div className=\"flex items-center gap-x-5\">\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.APPROVED}\r\n                // onClick={() => setValue(\"status\", \"approved\")}\r\n                value={postStatus.APPROVED}\r\n              >\r\n                Approved\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.PENDING}\r\n                // onClick={() => setValue(\"status\", \"pending\")}\r\n                value={postStatus.PENDING}\r\n              >\r\n                Pending\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.REJECTED}\r\n                // onClick={() => setValue(\"status\", \"reject\")}\r\n                value={postStatus.REJECTED}\r\n              >\r\n                Reject\r\n              </Radio>\r\n            </div>\r\n          </Field>\r\n        </div>\r\n\r\n        <div className=\"gap-x-5 flex justify-center\">\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mx-auto w-[200px]\"\r\n              isLoading={loading}\r\n              disable={loading}\r\n            >\r\n              Update new post\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              to=\"/manage/posts\"\r\n              className=\"mx-auto w-[100px] sm:w-[200px] md:w-[200px] lg:w-[200px]  \"\r\n              kind=\"ghost\"\r\n              type=\"submit\"\r\n            >\r\n              Back\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostUpdate;\r\n","import Quill from \"quill\";\r\n\r\nconst InlineBlot = Quill.import(\"blots/block\");\r\n\r\nclass LoadingImage extends InlineBlot {\r\n    static create(src) {\r\n        const node = super.create(src);\r\n        if (src === true) return node;\r\n\r\n        const image = document.createElement(\"img\");\r\n        image.setAttribute(\"src\", src);\r\n        node.appendChild(image);\r\n        return node;\r\n    }\r\n    deleteAt(index, length) {\r\n        super.deleteAt(index, length);\r\n        this.cache = {};\r\n    }\r\n    static value(domNode) {\r\n        const { src, custom } = domNode.dataset;\r\n        return { src, custom };\r\n    }\r\n}\r\n\r\nLoadingImage.blotName = \"imageBlot\";\r\nLoadingImage.className = \"image-uploading\";\r\nLoadingImage.tagName = \"span\";\r\nQuill.register({ \"formats/imageBlot\": LoadingImage });\r\n\r\nexport default LoadingImage;","import LoadingImage from \"./blots/image.js\";\r\n\r\nclass ImageUploader {\r\n    constructor(quill, options) {\r\n        this.quill = quill;\r\n        this.options = options;\r\n        this.range = null;             \r\n        this.placeholderDelta = null; \r\n\r\n        if (typeof this.options.upload !== \"function\")\r\n            console.warn(\r\n                \"[Missing config] upload function that returns a promise is required\"\r\n            );\r\n\r\n        var toolbar = this.quill.getModule(\"toolbar\");\r\n        if (toolbar) {\r\n            toolbar.addHandler(\"image\", this.selectLocalImage.bind(this));\r\n        }\r\n\r\n        this.handleDrop = this.handleDrop.bind(this);\r\n        this.handlePaste = this.handlePaste.bind(this);\r\n\r\n        this.quill.root.addEventListener(\"drop\", this.handleDrop, false);\r\n        this.quill.root.addEventListener(\"paste\", this.handlePaste, false);\r\n    }\r\n\r\n    selectLocalImage() {\r\n        this.quill.focus();\r\n        this.range = this.quill.getSelection();\r\n        this.fileHolder = document.createElement(\"input\");\r\n        this.fileHolder.setAttribute(\"type\", \"file\");\r\n        this.fileHolder.setAttribute(\"accept\", \"image/*\");\r\n        this.fileHolder.setAttribute(\"style\", \"visibility:hidden\");\r\n\r\n        this.fileHolder.onchange = this.fileChanged.bind(this);\r\n\r\n        document.body.appendChild(this.fileHolder);\r\n\r\n        this.fileHolder.click();\r\n\r\n        window.requestAnimationFrame(() => {\r\n            document.body.removeChild(this.fileHolder);\r\n        });\r\n    }\r\n\r\n    handleDrop(evt) {\r\n        if (\r\n            evt.dataTransfer &&\r\n            evt.dataTransfer.files &&\r\n            evt.dataTransfer.files.length\r\n        ) {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            if (document.caretRangeFromPoint) {\r\n                const selection = document.getSelection();\r\n                const range = document.caretRangeFromPoint(evt.clientX, evt.clientY);\r\n                if (selection && range) {\r\n                    selection.setBaseAndExtent(\r\n                        range.startContainer,\r\n                        range.startOffset,\r\n                        range.startContainer,\r\n                        range.startOffset\r\n                    );\r\n                }\r\n            } else {\r\n                const selection = document.getSelection();\r\n                const range = document.caretPositionFromPoint(evt.clientX, evt.clientY);\r\n                if (selection && range) {\r\n                    selection.setBaseAndExtent(\r\n                        range.offsetNode,\r\n                        range.offset,\r\n                        range.offsetNode,\r\n                        range.offset\r\n                    );\r\n                }\r\n            }\r\n\r\n            this.quill.focus();\r\n            this.range = this.quill.getSelection();\r\n            let file = evt.dataTransfer.files[0];\r\n\r\n            setTimeout(() => {\r\n                this.quill.focus();\r\n                this.range = this.quill.getSelection();\r\n                this.readAndUploadFile(file);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    handlePaste(evt) {\r\n        let clipboard = evt.clipboardData || window.clipboardData;\r\n\r\n        // IE 11 is .files other browsers are .items\r\n        if (clipboard && (clipboard.items || clipboard.files)) {\r\n            let items = clipboard.items || clipboard.files;\r\n            const IMAGE_MIME_REGEX = /^image\\/(jpe?g|gif|png|svg|webp)$/i;\r\n\r\n            for (let i = 0; i < items.length; i++) {\r\n                if (IMAGE_MIME_REGEX.test(items[i].type)) {\r\n                    let file = items[i].getAsFile ? items[i].getAsFile() : items[i];\r\n\r\n                    if (file) {\r\n                        this.quill.focus();\r\n                        this.range = this.quill.getSelection();\r\n                        evt.preventDefault();\r\n                        setTimeout(() => {\r\n                            this.quill.focus();\r\n                            this.range = this.quill.getSelection();\r\n                            this.readAndUploadFile(file);\r\n                        }, 0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    readAndUploadFile(file) {\r\n        let isUploadReject = false;\r\n\r\n        const fileReader = new FileReader();\r\n\r\n        fileReader.addEventListener(\r\n            \"load\",\r\n            () => {\r\n                if (!isUploadReject) {\r\n                    let base64ImageSrc = fileReader.result;\r\n                    this.insertBase64Image(base64ImageSrc);\r\n                }\r\n            },\r\n            false\r\n        );\r\n\r\n        if (file) {\r\n            fileReader.readAsDataURL(file);\r\n        }\r\n\r\n        this.options.upload(file).then(\r\n            (imageUrl) => {\r\n                this.insertToEditor(imageUrl);\r\n            },\r\n            (error) => {\r\n                isUploadReject = true;\r\n                this.removeBase64Image();\r\n                console.warn(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    fileChanged() {\r\n        const file = this.fileHolder.files[0];\r\n        this.readAndUploadFile(file);\r\n    }\r\n\r\n    insertBase64Image(url) {\r\n        const range = this.range;\r\n                \r\n        this.placeholderDelta = this.quill.insertEmbed(\r\n            range.index,\r\n            LoadingImage.blotName,\r\n            `${url}`,\r\n            \"user\"\r\n        );\r\n    }\r\n\r\n    insertToEditor(url) {\r\n        const range = this.range;        \r\n\r\n        const lengthToDelete = this.calculatePlaceholderInsertLength();        \r\n        \r\n        // Delete the placeholder image\r\n        this.quill.deleteText(range.index, lengthToDelete, \"user\");\r\n        // Insert the server saved image\r\n        this.quill.insertEmbed(range.index, \"image\", `${url}`, \"user\");\r\n\r\n        range.index++;\r\n        this.quill.setSelection(range, \"user\");\r\n    }\r\n\r\n    // The length of the insert delta from insertBase64Image can vary depending on what part of the line the insert occurs\r\n    calculatePlaceholderInsertLength() {\r\n        return this.placeholderDelta.ops.reduce((accumulator, deltaOperation) => {            \r\n            if (deltaOperation.hasOwnProperty('insert'))\r\n                accumulator++;\r\n\r\n            return accumulator;\r\n        }, 0);\r\n    }\r\n\r\n    removeBase64Image() {        \r\n        const range = this.range;\r\n        const lengthToDelete = this.calculatePlaceholderInsertLength();\r\n\r\n        this.quill.deleteText(range.index, lengthToDelete, \"user\");\r\n    }\r\n}\r\n\r\nwindow.ImageUploader = ImageUploader;\r\nexport default ImageUploader;"],"names":["title","desc","children","className","Quill","ImageUploader","useForm","mode","defaultValues","control","handleSubmit","watch","reset","setValue","getValues","formState","isValid","isSubmitting","useSearchParams","params","watchStatus","watchHot","postId","get","useState","categories","setCategories","setTitleCategory","selectedCategory","setSelectedCategory","loading","setLoading","content","setContent","navigate","useNavigate","imageUrl","deleteImagePost","colRef","doc","db","updateDoc","image","imageName","useFireBaseImage","handleSelectImage","setImage","setProgress","handleDeleteImage","progress","useEffect","getDoc","singleDoc","data","fetchData","collection","getDocs","querySnapshot","results","forEach","push","id","getData","category","name","handleClickOption","item","docData","modules","useMemo","toolbar","header","list","useAuth","userInfo","role","userRole","updatePostHandler","values","cloneValues","slug","slugify","lower","status","Number","createdAt","serverTimestamp","toast","user","hot","action","onSubmit","placeholder","required","onChange","length","map","onClick","theme","value","on","checked","postStatus","type","isLoading","disable","to","kind","LoadingImage","index","this","cache","src","node","document","createElement","setAttribute","appendChild","domNode","dataset","custom","blotName","tagName","quill","options","range","placeholderDelta","upload","console","warn","getModule","addHandler","selectLocalImage","bind","handleDrop","handlePaste","root","addEventListener","focus","getSelection","fileHolder","onchange","fileChanged","body","click","window","requestAnimationFrame","removeChild","evt","dataTransfer","files","stopPropagation","preventDefault","caretRangeFromPoint","selection","clientX","clientY","setBaseAndExtent","startContainer","startOffset","caretPositionFromPoint","offsetNode","offset","file","setTimeout","readAndUploadFile","clipboard","clipboardData","items","IMAGE_MIME_REGEX","i","test","getAsFile","isUploadReject","fileReader","FileReader","base64ImageSrc","result","insertBase64Image","readAsDataURL","then","insertToEditor","error","removeBase64Image","url","insertEmbed","lengthToDelete","calculatePlaceholderInsertLength","deleteText","setSelection","ops","reduce","accumulator","deltaOperation","hasOwnProperty"],"sourceRoot":""}