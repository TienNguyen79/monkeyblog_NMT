{"version":3,"file":"static/js/346.48653926.chunk.js","mappings":"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","sources":["module/user/UserUpdate.js"],"sourcesContent":["import React from \"react\";\r\nimport DashboardHeading from \"../dashboard/DashboardHeading\";\r\nimport ImageUpload from \"../../components/image/ImageUpload\";\r\nimport Field from \"../../components/field/Field\";\r\nimport Label from \"../../components/label/Label\";\r\nimport Input from \"../../components/input/Input\";\r\nimport InputPasswordToggle from \"../../components/input/InputPasswordToggle\";\r\nimport FieldCheckboxes from \"../../components/field/FieldCheckboxes\";\r\nimport Radio from \"../../components/checkbox/Radio\";\r\nimport Button from \"../../components/button/Button\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { userRole, userStatus } from \"../../utils/constants\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  onSnapshot,\r\n  query,\r\n  updateDoc,\r\n  where,\r\n  writeBatch,\r\n} from \"firebase/firestore\";\r\nimport { auth, db } from \"../../firebase-app/firebase-config\";\r\nimport useFireBaseImage from \"../../hooks/useFireBaseImage\";\r\nimport { toast } from \"react-toastify\";\r\nimport Textarea from \"../../components/textarea/Textarea\";\r\nimport { useAuth } from \"../../contexts/auth-context\";\r\nimport slugify from \"slugify\";\r\nimport { updatePassword } from \"firebase/auth\";\r\n\r\nconst UserUpdate = () => {\r\n  const [params] = useSearchParams();\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    watch,\r\n    reset,\r\n    setValue,\r\n    getValues,\r\n\r\n    formState: { isSubmitting, isValid },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: {},\r\n  });\r\n  //   console.log(\"CategoryUpdate ~ params\", params.get(\"id\")); //vi du :http://localhost:3000/manage/update-category?id=303 ta sẽ lấy được 303\r\n  const UserId = params.get(\"id\");\r\n  const watchStatus = watch(\"status\");\r\n  const watchRole = watch(\"role\");\r\n  const imageUrl = getValues(\"avatar\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const {\r\n    handleSelectImage,\r\n    setImage,\r\n    setProgress,\r\n    handleDeleteImage,\r\n    progress,\r\n    image,\r\n    imageName,\r\n  } = useFireBaseImage(setValue, getValues, deleteAvatar);\r\n\r\n  async function deleteAvatar() {\r\n    //khi ấn xóa và thành công nó sẽ cập nhật lại trong data base\r\n    const colRef = doc(db, \"users\", UserId);\r\n    await updateDoc(colRef, {\r\n      avatar: \"\",\r\n      imageName: \"\",\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setImage(imageUrl); //để khi ấn vào xong bay sang trang update-user nó sẽ hiện avatar lên\r\n  }, [imageUrl, setImage]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const colRef = doc(db, \"users\", UserId);\r\n      const singleDoc = await getDoc(colRef);\r\n      // console.log(singleDoc.data());\r\n      reset(singleDoc.data()); //reset về trạng thái mà ta lấy dữ liệu hiện tại của nó  thông qua Id sẽ giúp điền các giữu liệu vào form\r\n    }\r\n    fetchData();\r\n  }, [UserId, reset]);\r\n\r\n  // console.log(\"imageName\" + imageName);\r\n  // console.log(imageUrl);\r\n  // useEffect(() => {\r\n  //   async function fetchData() {\r\n  //     const colRef = collection(db, \"posts\");\r\n  //     const q = query(colRef, where(\"user.id\", \"==\", UserId));\r\n  //     onSnapshot(q, (snapshot) => {\r\n  //       snapshot.forEach((item) => {\r\n  //         console.log(item.data().user);\r\n  //       });\r\n  //     });\r\n  //     // console.log(q);\r\n  //   }\r\n  //   fetchData();\r\n  // }, [UserId]);\r\n\r\n  // if (!UserId) return null;\r\n\r\n  const { userInfo } = useAuth();\r\n  if (userInfo.role !== userRole.ADMIN)\r\n    return (\r\n      <div className=\"text-[30px] font-semibold text-green-500 \">\r\n        This page is for admins only\r\n      </div>\r\n    );\r\n\r\n  const handleUpdateUser = async (values) => {\r\n    // console.log(values);\r\n    if (!isValid) return;\r\n    try {\r\n      const colRef = doc(db, \"users\", UserId);\r\n      await updateDoc(colRef, {\r\n        ...values,\r\n        avatar: image,\r\n        imageName: imageName,\r\n        username: slugify(values.username || values.fullname, {\r\n          lower: true,\r\n        }),\r\n      });\r\n      // console.log(colRef);\r\n      // const cloneValue = { ...values };\r\n      //xử lí khi update user thì user trong posts cũng phải thay đổi theo\r\n      const colRef2 = collection(db, \"posts\");\r\n      const q = query(colRef2, where(\"user.id\", \"==\", UserId));\r\n\r\n      const snapshot = await getDocs(q); // Lấy tất cả tài liệu thỏa mãn truy vấn\r\n      const batch = writeBatch(db);\r\n\r\n      snapshot.forEach((item) => {\r\n        const docRef = doc(db, \"posts\", item.id);\r\n        batch.update(docRef, {\r\n          user: {\r\n            ...values,\r\n            id: UserId,\r\n            avatar: image,\r\n            imageName: imageName,\r\n            username: slugify(values.username || values.fullname, {\r\n              //khi không nhập username nó còn biết lấy slug của fullname\r\n              lower: true,\r\n            }),\r\n          }, // Thay đổi user như bạn mong muốn\r\n        });\r\n      });\r\n\r\n      await batch.commit();\r\n\r\n      //----------------------------------------\r\n      toast.success(\"Update User successfully!!\");\r\n      navigate(\"/manage/user\");\r\n    } catch (error) {\r\n      toast.error(\"Update User failed!!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DashboardHeading\r\n        title=\"Update User\"\r\n        desc={`Update your User id : ${UserId}`}\r\n      ></DashboardHeading>\r\n      <form onSubmit={handleSubmit(handleUpdateUser)}>\r\n        <div className=\"w-[200px] h-[200px] mx-auto mb-10 \">\r\n          <ImageUpload\r\n            className=\"!rounded-full h-full\"\r\n            onChange={handleSelectImage}\r\n            handleDeleteImage={handleDeleteImage}\r\n            progress={progress}\r\n            image={image}\r\n          ></ImageUpload>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Fullname</Label>\r\n            <Input\r\n              name=\"fullname\"\r\n              placeholder=\"Enter your fullname\"\r\n              control={control}\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label>Username</Label>\r\n            <Input\r\n              name=\"username\"\r\n              placeholder=\"Enter your username\"\r\n              control={control}\r\n            ></Input>\r\n          </Field>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Email</Label>\r\n            <Input\r\n              name=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              control={control}\r\n              type=\"email\"\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label>Password</Label>\r\n            {/* <Input\r\n          name=\"password\"\r\n          placeholder=\"Enter your password\"\r\n          control={control}\r\n          type=\"password\"\r\n        ></Input> */}\r\n            <InputPasswordToggle control={control}></InputPasswordToggle>\r\n          </Field>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Status</Label>\r\n            <FieldCheckboxes>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === userStatus.ACTIVE}\r\n                value={userStatus.ACTIVE}\r\n              >\r\n                Active\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === userStatus.PENDING}\r\n                value={userStatus.PENDING}\r\n              >\r\n                Pending\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === userStatus.BAN}\r\n                value={userStatus.BAN}\r\n              >\r\n                Banned\r\n              </Radio>\r\n            </FieldCheckboxes>\r\n          </Field>\r\n          <Field>\r\n            <Label>Role</Label>\r\n            <FieldCheckboxes>\r\n              <Radio\r\n                name=\"role\"\r\n                control={control}\r\n                checked={Number(watchRole) === userRole.ADMIN}\r\n                value={userRole.ADMIN}\r\n              >\r\n                Admin\r\n              </Radio>\r\n              <Radio\r\n                name=\"role\"\r\n                control={control}\r\n                checked={Number(watchRole) === userRole.MOD}\r\n                value={userRole.MOD}\r\n              >\r\n                Moderator\r\n              </Radio>\r\n\r\n              <Radio\r\n                name=\"role\"\r\n                control={control}\r\n                checked={Number(watchRole) === userRole.USER}\r\n                value={userRole.USER}\r\n              >\r\n                User\r\n              </Radio>\r\n            </FieldCheckboxes>\r\n          </Field>\r\n          <Field>\r\n            <Label>Description</Label>\r\n            <Textarea name=\"description\" control={control}></Textarea>\r\n          </Field>\r\n        </div>\r\n\r\n        <div className=\"gap-x-5 flex justify-center\">\r\n          <div>\r\n            <Button\r\n              kind=\"primary\"\r\n              className=\"mx-auto w-[200px]\"\r\n              isLoading={isSubmitting}\r\n              disabled={isSubmitting}\r\n              type=\"submit\"\r\n            >\r\n              Update User\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              to=\"/manage/user\"\r\n              className=\"mx-auto w-[100px] sm:w-[200px] md:w-[200px] lg:w-[200px]  \"\r\n              kind=\"ghost\"\r\n              type=\"submit\"\r\n            >\r\n              Back\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserUpdate;\r\n"],"names":["useSearchParams","params","useForm","mode","defaultValues","control","handleSubmit","watch","reset","setValue","getValues","formState","isSubmitting","isValid","UserId","get","watchStatus","watchRole","imageUrl","navigate","useNavigate","useFireBaseImage","handleSelectImage","setImage","handleDeleteImage","setProgress","progress","image","imageName","colRef","doc","db","updateDoc","avatar","useEffect","getDoc","singleDoc","data","fetchData","useAuth","userInfo","role","userRole","className","handleUpdateUser","values","username","slugify","fullname","lower","colRef2","collection","q","query","where","getDocs","snapshot","batch","writeBatch","forEach","item","docRef","id","update","user","commit","toast","title","desc","onSubmit","onChange","name","placeholder","type","checked","Number","userStatus","value","kind","isLoading","disabled","to"],"sourceRoot":""}