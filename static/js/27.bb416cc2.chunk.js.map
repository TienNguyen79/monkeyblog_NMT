{"version":3,"file":"static/js/27.bb416cc2.chunk.js","mappings":"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","sources":["components/action/ActionDelete.js","components/action/ActionEdit.js","components/action/ActionView.js","components/button/Button.js","components/label/LabelStatus.js","components/table/Table.js","module/dashboard/DashboardHeading.js","module/post/MyPostManage.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst ActionDelete = ({ onClick = () => {} }) => {\r\n  return (\r\n    <span\r\n      className=\"flex items-center justify-center w-10 h-10 border border-gray-200 rounded cursor-pointer\"\r\n      onClick={onClick}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"w-5 h-5\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n        />\r\n      </svg>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ActionDelete;\r\n","import React from \"react\";\r\n\r\nconst ActionEdit = ({ onClick = () => {} }) => {\r\n  return (\r\n    <span\r\n      className=\"flex items-center justify-center w-10 h-10 border border-gray-200 rounded cursor-pointer\"\r\n      onClick={onClick}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"w-5 h-5\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\r\n        />\r\n      </svg>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ActionEdit;\r\n","import React from \"react\";\r\n\r\nconst ActionView = ({ onClick = () => {} }) => {\r\n  return (\r\n    <span\r\n      className=\"flex items-center justify-center w-10 h-10 border border-gray-200 rounded cursor-pointer\"\r\n      onClick={onClick}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"w-5 h-5\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n        />\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\r\n        />\r\n      </svg>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ActionView;\r\n","import React, { Children } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst ButtonStyles = styled.button`\r\n  cursor: pointer;\r\n\r\n  /* padding: 10px 0; */\r\n  height: ${(props) => props.height || \"50px\"};\r\n  line-height: 1;\r\n\r\n  ${(props) =>\r\n    props.kind === \"secondary\" &&\r\n    css`\r\n      color: ${(props) => props.theme.primary};\r\n      background-color: white;\r\n    `};\r\n  ${(props) =>\r\n    props.kind === \"primary\" &&\r\n    css`\r\n      color: white;\r\n      background-image: linear-gradient(\r\n        to right bottom,\r\n        ${(props) => props.theme.primary},\r\n        ${(props) => props.theme.secondary}\r\n      );\r\n    `};\r\n  ${(props) =>\r\n    props.kind === \"ghost\" &&\r\n    css`\r\n      color: ${(props) => props.theme.primary};\r\n      background-color: rgba(29, 192, 113, 0.1);\r\n      padding: 10px;\r\n    `};\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  &:disabled {\r\n    opacity: 0.5;\r\n    pointer-events: none;\r\n  }\r\n  .loadingsvg {\r\n    width: 40px;\r\n    height: 40px;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\n/**\r\n * @requires\r\n * @param {string} type Type of button 'button' | 'submit'\r\n * @returns\r\n */\r\nconst Button = ({\r\n  type = \"button\",\r\n  onClick = () => {},\r\n  children,\r\n  kind = \"primary\",\r\n  ...props\r\n}) => {\r\n  const { isLoading, to } = props; //destructuring\r\n\r\n  // !! convert sang kiểu boolean để trả về kiểu true or false thôi\r\n  const child = !!isLoading ? (\r\n    <img src=\"/Spin-1s-200px.svg\" className=\"loadingsvg\" alt=\"\" />\r\n  ) : (\r\n    children\r\n  );\r\n\r\n  //button khi có prop to sẽ điều hướng trang được\r\n  if (to !== \"\" && typeof to === \"string\") {\r\n    return (\r\n      <NavLink to={to}>\r\n        <ButtonStyles type={type} kind={kind} {...props}>\r\n          {child}\r\n        </ButtonStyles>\r\n      </NavLink>\r\n    );\r\n  }\r\n  return (\r\n    <ButtonStyles type={type} kind={kind} onClick={onClick} {...props}>\r\n      {child}\r\n    </ButtonStyles>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.oneOf([\"button\", \"submit\"]),\r\n  isLoading: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LabelStatusStyles = styled.span`\r\n  display: inline-block;\r\n  padding: 10px 15px;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n/**\r\n *\r\n * @param type - \"default\" \"success\" \"warning\" \"danger\"\r\n * @returns\r\n */\r\nconst LabelStatus = ({ children, type = \"default\" }) => {\r\n  let styleClassName = \"text-gray-500 bg-gray-100\";\r\n  switch (type) {\r\n    case \"success\":\r\n      styleClassName = \"text-green-500 bg-green-100\";\r\n      break;\r\n    case \"warning\":\r\n      styleClassName = \"text-orange-500 bg-orange-100\";\r\n      break;\r\n    case \"danger\":\r\n      styleClassName = \"text-red-500 bg-red-100\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <LabelStatusStyles className={styleClassName}>{children}</LabelStatusStyles>\r\n  );\r\n};\r\nLabelStatus.propTypes = {\r\n  children: PropTypes.node,\r\n  type: PropTypes.oneOf([\"default\", \"success\", \"warning\", \"danger\"]).isRequired,\r\n};\r\nexport default LabelStatus;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst TableStyles = styled.div`\r\n  overflow-x: auto;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  /* height: 300px; */\r\n  /* Mobile styles (<640px) */\r\n  @media (max-width: 640px) {\r\n    /* Mobile styles */\r\n    width: 330px;\r\n  }\r\n  /* Tablet styles (>=768px and <1024px) */\r\n  @media (min-width: 640px) and (max-width: 1023px) {\r\n    width: 800px;\r\n  }\r\n  table {\r\n    width: 100%;\r\n  }\r\n  thead {\r\n    background-color: #f7f7f8;\r\n  }\r\n  th,\r\n  td {\r\n    vertical-align: middle;\r\n    white-space: nowrap;\r\n  }\r\n  th {\r\n    padding: 20px 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n  }\r\n  td {\r\n    padding: 15px 30px;\r\n  }\r\n  tbody {\r\n  }\r\n`;\r\nconst Table = ({ children }) => {\r\n  return (\r\n    <TableStyles>\r\n      <table>{children}</table>\r\n    </TableStyles>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nconst DashboardHeading = ({ title = \"\", desc = \"\", children }) => {\r\n  return (\r\n    <div className=\"mb-4 flex items-start justify-between\">\r\n      <div>\r\n        <h1 className=\"dashboard-heading\">{title}</h1>\r\n        <p className=\"dashboard-short-desc\">{desc}</p>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardHeading;\r\n","import React, { useEffect, useState } from \"react\";\r\n// import { useAuth } from \"../contexts/auth-context\";\r\n// import { postStatus, userRole } from \"../utils/constants\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  collection,\r\n  deleteDoc,\r\n  doc,\r\n  getDocs,\r\n  limit,\r\n  onSnapshot,\r\n  query,\r\n  startAfter,\r\n  where,\r\n} from \"firebase/firestore\";\r\n// import { db } from \"../firebase-app/firebase-config\";\r\n// import DashboardHeading from \"../module/dashboard/DashboardHeading\";\r\n// import Table from \"../components/table/Table\";\r\n// import LabelStatus from \"../components/label/LabelStatus\";\r\n// import ActionView from \"../components/action/ActionView\";\r\n// import ActionEdit from \"../components/action/ActionEdit\";\r\n// import ActionDelete from \"../components/action/ActionDelete\";\r\nimport Swal from \"sweetalert2\";\r\n// import Button from \"../components/button/Button\";\r\nimport { debounce } from \"lodash\";\r\nimport LabelStatus from \"../../components/label/LabelStatus\";\r\nimport DashboardHeading from \"../dashboard/DashboardHeading\";\r\nimport Table from \"../../components/table/Table\";\r\nimport ActionView from \"../../components/action/ActionView\";\r\nimport ActionEdit from \"../../components/action/ActionEdit\";\r\nimport ActionDelete from \"../../components/action/ActionDelete\";\r\nimport Button from \"../../components/button/Button\";\r\nimport { useAuth } from \"../../contexts/auth-context\";\r\nimport { postStatus } from \"../../utils/constants\";\r\nimport { db } from \"../../firebase-app/firebase-config\";\r\n\r\nconst POST_PER_PAGE = 2;\r\nconst MyPostManage = () => {\r\n  const navigate = useNavigate();\r\n  const { userInfo } = useAuth();\r\n  const [posts, setPosts] = useState([]);\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [lastDoc, setLoadDoc] = useState();\r\n  const [total, setTotal] = useState(0);\r\n  // if (userInfo.role !== userRole.ADMIN) return navigate(\"/\");\r\n  // console.log(userInfo.uid);\r\n  const renderPostStatus = (status) => {\r\n    switch (status) {\r\n      case postStatus.APPROVED:\r\n        return <LabelStatus type=\"success\">APPROVED</LabelStatus>;\r\n      case postStatus.PENDING:\r\n        return <LabelStatus type=\"warning\">PENDING</LabelStatus>;\r\n      case postStatus.REJECTED:\r\n        return <LabelStatus type=\"danger\">REJECTED</LabelStatus>;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleLoadMorePost = async () => {\r\n    const nextRef = query(\r\n      collection(db, \"posts\"),\r\n      startAfter(lastDoc),\r\n      limit(1) //load 1 lần được 1 cái\r\n    );\r\n\r\n    onSnapshot(nextRef, (snapshot) => {\r\n      let results = [];\r\n      snapshot.forEach((doc) => {\r\n        results.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      setPosts([...posts, ...results]);\r\n    });\r\n\r\n    const documentSnapshots = await getDocs(nextRef);\r\n    // Get the last visible document\r\n    const lastVisible =\r\n      documentSnapshots.docs[documentSnapshots.docs.length - 1];\r\n    setLoadDoc(lastVisible);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const colRef = collection(db, \"posts\");\r\n\r\n      const q = query(\r\n        colRef,\r\n        where(\"user.id\", \"==\", userInfo?.uid),\r\n        limit(POST_PER_PAGE)\r\n      );\r\n\r\n      const newRef = filter\r\n        ? query(\r\n            colRef,\r\n            where(\"title\", \">=\", filter),\r\n            where(\"title\", \"<=\", filter + \"utf8\")\r\n          )\r\n        : q;\r\n\r\n      //phục vụ loadmore\r\n      const documentSnapshots = await getDocs(newRef);\r\n      const lastVisible =\r\n        documentSnapshots.docs[documentSnapshots.docs.length - 1];\r\n      setLoadDoc(lastVisible);\r\n\r\n      onSnapshot(\r\n        query(colRef, where(\"user.id\", \"==\", userInfo?.uid)),\r\n        (snapshot) => {\r\n          const count = [];\r\n          snapshot.forEach((item) => {\r\n            count.push(item.data());\r\n          });\r\n          setTotal(count.length);\r\n        }\r\n      );\r\n      //------------------------------\r\n\r\n      onSnapshot(newRef, (snapshot) => {\r\n        let results = [];\r\n        snapshot.forEach((doc) => {\r\n          results.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        setPosts(results);\r\n      });\r\n    }\r\n    getData();\r\n  }, [filter, userInfo.uid]);\r\n\r\n  //xử lí xóa\r\n  const handleDeleteCategory = async (postId) => {\r\n    const colRef = doc(db, \"posts\", postId);\r\n\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        await deleteDoc(colRef); //thực hiện xóa ở cloud storge\r\n        Swal.fire(\"Deleted!\", \"Your Post has been deleted.\", \"success\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleInputFilter = debounce((e) => {\r\n    setFilter(e.target.value);\r\n  }, 500);\r\n\r\n  //phức tạp hơn các cái khác\r\n  const handleHidePost = async () => {\r\n    const colRef = collection(db, \"posts\");\r\n\r\n    const q = query(\r\n      colRef,\r\n      where(\"user.id\", \"==\", userInfo?.uid),\r\n      limit(POST_PER_PAGE)\r\n    );\r\n\r\n    onSnapshot(q, (snapshot) => {\r\n      let results = [];\r\n      snapshot.forEach((doc) => {\r\n        results.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      setPosts(results);\r\n    });\r\n\r\n    const documentSnapshots = await getDocs(q);\r\n    // Get the last visible document\r\n    const lastVisible =\r\n      documentSnapshots.docs[documentSnapshots.docs.length - 1];\r\n    setLoadDoc(lastVisible); //set lại cái loaddoc này mới loadMore đc tiếp\r\n  };\r\n  // console.log(postList);\r\n  return (\r\n    <div>\r\n      {/* <h1 className=\"dashboard-heading\">Dashboard page</h1> */}\r\n      <DashboardHeading\r\n        title=\"My Posts\"\r\n        desc=\"Manage my posts\"\r\n      ></DashboardHeading>\r\n      <div className=\"flex justify-end py-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search.....\"\r\n          className=\"border py-2 px-4 font-medium\"\r\n          onChange={handleInputFilter}\r\n        />\r\n      </div>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Post</th>\r\n            <th>Category</th>\r\n            <th>Author</th>\r\n            <th>Status</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {posts.length > 0 &&\r\n            posts.map((post) => (\r\n              <tr key={post.id}>\r\n                <td title={post.id}>{post.id.slice(0, 5) + \"...\"}</td>\r\n                <td>\r\n                  <div className=\"flex items-center gap-x-3\">\r\n                    <img\r\n                      src={post.image}\r\n                      alt=\"\"\r\n                      className=\"w-[66px] h-[55px] rounded object-cover\"\r\n                    />\r\n                    <div className=\"\">\r\n                      <h3\r\n                        title={post.title}\r\n                        className=\"font-semibold whitespace-nowrap overflow-hidden overflow-ellipsis max-w-[150px] \"\r\n                      >\r\n                        {post.title}\r\n                      </h3>\r\n                      <time className=\"text-sm text-gray-500\">\r\n                        {new Date(\r\n                          post?.createdAt?.seconds * 1000\r\n                        ).toLocaleDateString(\"vi-VI\")}\r\n                      </time>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <span className=\"text-gray-500\">{post.category?.name}</span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"text-gray-500\">{post.user?.fullname}</span>\r\n                </td>\r\n                <td>{renderPostStatus(post.status)}</td>\r\n                <td>\r\n                  <div className=\"flex items-center gap-x-3 text-gray-500\">\r\n                    <ActionView\r\n                      onClick={() => navigate(`/${post.slug}`)}\r\n                    ></ActionView>\r\n                    <ActionEdit\r\n                      onClick={() =>\r\n                        navigate(`/user-update-post?id=${post.id}`)\r\n                      }\r\n                    ></ActionEdit>\r\n                    <ActionDelete\r\n                      onClick={() => handleDeleteCategory(post.id)}\r\n                    ></ActionDelete>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </Table>\r\n      <div className=\"mt-10 text-center\">\r\n        {/* <Pagination></Pagination> */}\r\n        {total > posts.length && !filter && (\r\n          <Button\r\n            kind=\"ghost\"\r\n            className=\"mx-auto w-[200px]\"\r\n            onClick={handleLoadMorePost}\r\n          >\r\n            See more+\r\n          </Button>\r\n        )}\r\n\r\n        {total <= posts.length && !filter && (\r\n          <Button\r\n            kind=\"ghost\"\r\n            className=\"mx-auto w-[200px]\"\r\n            onClick={handleHidePost}\r\n          >\r\n            Hide\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPostManage;\r\n"],"names":["onClick","className","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","ButtonStyles","styled","props","height","kind","css","theme","primary","secondary","type","children","isLoading","to","child","src","alt","LabelStatusStyles","styleClassName","TableStyles","title","desc","navigate","useNavigate","userInfo","useAuth","useState","posts","setPosts","filter","setFilter","lastDoc","setLoadDoc","total","setTotal","renderPostStatus","status","postStatus","handleLoadMorePost","nextRef","query","collection","db","startAfter","limit","onSnapshot","snapshot","results","forEach","doc","push","id","data","getDocs","documentSnapshots","lastVisible","docs","length","useEffect","colRef","q","where","uid","newRef","count","item","getData","handleDeleteCategory","postId","Swal","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteDoc","handleInputFilter","debounce","e","target","value","handleHidePost","placeholder","onChange","map","post","slice","image","Date","createdAt","seconds","toLocaleDateString","category","name","user","fullname","slug"],"sourceRoot":""}